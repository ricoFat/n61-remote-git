# Travail pratique #01 — travailler avec Git.

Pour cet exercice vous devez noter les commandes que vous avez exécutées, vous devrez donc utiliser Git en ligne de commande (CLI). Notez les commandes Git sous leur point. Remettez un dossier complet incluant les trois répertoires Git et ce fichier texte.

## Remise

La remise des travaux se fera sur Léa, avant la séance #05. Aucun retard ne sera toléré, un travail remis après l'échéance sera considéré avec un jour de retard.

Politique sur les retards : Un travail en retard sera pénalisé de 5 % de la note maximale pour chaque jour de retard, et ce jusqu’à concurrence de 25 %. Aucun travail ne sera accepté au-delà de 5 jours de retard.

---

## Numéro 1 : Commande de base

1.	Créez un dépôt git en local

   ~/PlanificationWeb  git init

2.	Créez les 3 fichiers suivant et y mettre quelques lignes de texte
	a.	index.html
	b.	 style.css
	c.	 main.js

Commandes ici
 . touch index,html 
 . touch main.js
 . touch style.css

3.	Vérifiez l’état de votre dépôt
```
Commandes ici
  git status

4.	Créez un commit avec ces trois fichiers
```
Commandes ici
 . git add index.html style.css main.js
 . git commit -m "Ajout des fichiers index.html, style.css et main.js" 

5. Faites la commande suivante : 
` git status >> git_exercice1.log && git log >> git_exercice1.log``
6.	Faites un commit pour ajouter le nouveau fichier créer (git_exercice1.log)

Commandes ici
 . git add git_exercice1.log
 . git commit -m "Ajouter le fichier git_exercice1.log" 

## Numéro 2 : Travailler avec un distant (remote)

1.	Créez un dépôt nommé « n61-remote-git » sur votre compte Github.com. Si vous n’avez pas de compte, c’est le bon moment pour en créer un…
2.	Clonez le dépôt vide en local

Commandes ici
 . git clone https://github.com/ricoFat/n61-remote-git.git 
3.	Créez les 3 fichiers suivant et mettez-y quelques lignes de texte
	a.	index.html
	b.	 style.css
	c.	 main.js


Commandes ici
 . touch index,html 
 . touch main.js
 . touch style.css
4.	Vérifiez l’état de votre dépôt 
 . git status
Commandes ici
```
5.	Créez un commit avec ces trois fichiers
```
Commandes ici
  . git add index.html style.css main.js
  . git commit -m "Ajout des fichiers index.html, style.css et main.js" 

6.	Mettez à jour votre dépôt distant
```
Commandes ici
` git remote add origin https://github.com/ricoFat/n61-remote-git.git ``
` git push origin master``

7.	Faites une capture d’écran de votre dépôt distant et ajoutez le fichier image dans votre commit.
```
Commandes ici
`git add image.png ``
` git  commit -m " ajout du fichier image.png" ``
` git push origin master``

## Numéro 3 : Travailler en équipe
1.	Forkez le projet https://github.com/emmacharp/exercice_git_equipe sur votre compte github. 

2.	Clonez le dépôt en local
``
Commandes ici
` ` git clone  https://github.com/ricoFat/exercice_git_equipe.git``
3. Configurez le dépôt upstream pour qu’il pointe vers le dépôt que vous avez forké (et non votre dépôt distant)
```
Commandes ici
` git remote add upstream https://github.com/ricoFat/exercice_git_equipe.git
 ``
4.	Exécutez la commande ``git remote -v`` et copiez le contenu ici :
` ``
Contenu copié ici
` accra@ErickK MINGW64 ~/PlanificationWeb (master)
$ git remote -v
origin  https://github.com/ricoFat/n61-remote-git.git (fetch)
origin  https://github.com/ricoFat/n61-remote-git.git (push)
upstream        https://github.com/ricoFat/exercice_git_equipe.git (fetch)
upstream        https://github.com/ricoFat/exercice_git_equipe.git (push)
 ``
5.	Remplacez « Jonathan Martel » dans le fichier main.js et inscrivez-y votre nom. 
6.	Commitez vos changements, mettez à jour votre distant (remote)
```
Commandes ici
```


7.	Pour générer un conflit de code, ajoutez un nouveau remote avec lequel nous allons jouer en utilisant la commande suivante :  
`` git remote add depotconflit https://github.com/emmacharp/exercice_git_equipe_conflit``
8.	Faite la mise à jour et la fusion de votre dépôt local avec le nouveau dépôt distant :  
``git pull depotconflit master``  
Et copiez la réponse du terminal ici :  
```
Réponse copiée ici
` $ git pull depotconflit master
remote: Enumerating objects: 11, done.
remote: Counting objects: 100% (11/11), done.
remote: Compressing objects: 100% (7/7), done.
remote: Total 11 (delta 0), reused 11 (delta 0), pack-reused 0
Unpacking objects: 100% (11/11), 1.02 KiB | 74.00 KiB/s, done.
From https://github.com/emmacharp/exercice_git_equipe_conflit
 * branch            master     -> FETCH_HEAD
 * [new branch]      master     -> depotconflit/master
fatal: refusing to merge unrelated histories
``
9.	Réglez les conflits, finalisez la fusion et mettez à jour votre distant (push sur origin)
10.	Sur Github.com, ouvrez une demande de pull-request vers https://github.com/emmacharp/exercice_git_equipe

